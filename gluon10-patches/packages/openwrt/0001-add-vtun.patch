From a707922f3690ceac611ee84827271ba7ee491282 Mon Sep 17 00:00:00 2001
From: RubenKelevra <ruben@freifunk-nrw.de>
Date: Sun, 31 Jul 2016 17:41:45 +0200
Subject: [PATCH] add vtun

---
 net/vtun/Makefile               | 78 +++++++++++++++++++++++++++++++++++++++++
 net/vtun/patches/100-lzo2.patch | 37 +++++++++++++++++++
 2 files changed, 115 insertions(+)
 create mode 100644 net/vtun/Makefile
 create mode 100644 net/vtun/patches/100-lzo2.patch

diff --git a/net/vtun/Makefile b/net/vtun/Makefile
new file mode 100644
index 0000000..e8d4422
--- /dev/null
+++ b/net/vtun/Makefile
@@ -0,0 +1,78 @@
+#
+# Copyright (C) 2006-2009 OpenWrt.org
+#
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+
+include $(TOPDIR)/rules.mk
+
+PKG_NAME:=vtun
+PKG_VERSION:=3.0.2
+PKG_RELEASE:=1
+
+PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
+PKG_SOURCE_URL:=@SF/vtun
+PKG_MD5SUM:=d3d8bc4d58886498a1c338670eab9315
+
+include $(INCLUDE_DIR)/package.mk
+
+define Package/vtun
+  SECTION:=net
+  CATEGORY:=Network
+  DEPENDS:=+kmod-tun +VTUN_LZO:liblzo +VTUN_LZO:zlib +VTUN_SSL:libopenssl
+  TITLE:=VPN tunneling daemon
+  URL:=http://vtun.sourceforge.net
+  SUBMENU:=VPN
+  MENU:=1
+endef
+
+define Package/vtun/config
+menu "Configuration"
+        depends on PACKAGE_vtun
+
+config VTUN_config
+	bool
+
+	depends on PACKAGE_vtun
+	config VTUN_LZO
+		bool "enable vtun compression"
+		help
+			vtun tunnels will be compressed
+		default y
+
+	config VTUN_SSL
+		bool "enable vtun ssl encryption"
+		help
+			vtun tunnels will be encrypted
+		default y
+endmenu
+endef
+
+define Package/vtun/conffiles
+/etc/vtund.conf
+endef
+
+CONFIGURE_ARGS += \
+	$(if $(CONFIG_VTUN_LZO),--with-lzo-lib="$(STAGING_DIR)/usr/lib/",--disable-zlib) \
+	$(if $(CONFIG_VTUN_LZO),--with-lzo-headers="$(STAGING_DIR)/usr/include/lzo",--disable-lzo) \
+	$(if $(CONFIG_VTUN_SSL),--with-ssl-headers="$(STAGING_DIR)/usr/lib/",--disable-ssl) \
+
+CONFIGURE_VARS += \
+	LIBS="$(TARGET_LDFLAGS)" \
+	$(if $(CONFIG_VTUN_LZO),LZO_HDR_DIR="$(STAGING_DIR)/usr/include/lzo") \
+	$(if $(CONFIG_VTUN_SSL),BLOWFISH_HDR_DIR="$(STAGING_DIR)/usr/include/openssl") \
+	$(if $(CONFIG_VTUN_SSL),SSL_HDR_DIR="$(STAGING_DIR)/usr/include/openssl") \
+
+define Build/Compile
+	$(call Build/Compile/Default,vtund)
+endef
+
+define Package/vtun/install
+	$(INSTALL_DIR) $(1)/etc
+	$(INSTALL_CONF) $(PKG_BUILD_DIR)/vtund.conf $(1)/etc/
+	$(INSTALL_DIR) $(1)/usr/sbin
+	$(INSTALL_BIN) $(PKG_BUILD_DIR)/vtund $(1)/usr/sbin/
+endef
+
+$(eval $(call BuildPackage,vtun))
diff --git a/net/vtun/patches/100-lzo2.patch b/net/vtun/patches/100-lzo2.patch
new file mode 100644
index 0000000..fa9ba8b
--- /dev/null
+++ b/net/vtun/patches/100-lzo2.patch
@@ -0,0 +1,37 @@
+--- a/configure
++++ b/configure
+@@ -5459,7 +5459,7 @@ echo $ECHO_N "checking \"for lzo_asm.h\"
+ 	fi
+         echo "$as_me:$LINENO: result: ($dir) yes " >&5
+ echo "${ECHO_T}($dir) yes " >&6
+-	LZOCHK="lzo2 lzo"
++	LZOCHK="lzo2"
+     else
+         echo "$as_me:$LINENO: result: \"no\"" >&5
+ echo "${ECHO_T}\"no\"" >&6
+@@ -5504,8 +5504,7 @@ echo "${ECHO_T}($dir) yes " >&6
+         echo "$as_me:$LINENO: result: \"no\"" >&5
+ echo "${ECHO_T}\"no\"" >&6
+ 	{ { echo "$as_me:$LINENO: error: LZO library not found. " >&5
+-echo "$as_me: error: LZO library not found. " >&2;}
+-   { (exit 1); exit 1; }; }
++echo "$as_me: error: LZO library not found. " >&2;} }
+ 
+     fi
+ 
+@@ -5598,13 +5597,11 @@ fi
+       done
+       if test $havelzo = 0; then
+ 	    { { echo "$as_me:$LINENO: error: LZO library not found. " >&5
+-echo "$as_me: error: LZO library not found. " >&2;}
+-   { (exit 1); exit 1; }; }
++echo "$as_me: error: LZO library not found. " >&2;} }
+       fi
+    else
+         { { echo "$as_me:$LINENO: error: LZO headers not found. " >&5
+-echo "$as_me: error: LZO headers not found. " >&2;}
+-   { (exit 1); exit 1; }; }
++echo "$as_me: error: LZO headers not found. " >&2;} }
+    fi
+ fi
+ 
-- 
2.9.2

