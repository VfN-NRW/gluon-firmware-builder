#!/usr/bin/env bash

set -e

DIR="$(pwd)"

if [ -z "$1" ]; then
	printf 'ERROR: no gluon-release was specified.\n' >&2
	exit 1
fi

sel_gluon_release="$1"
shift

if [ -z "$1" ]; then
	printf 'you have to select stable, nightly, alpha, beta or rc\n' >&2
	exit 1
fi

if [ "$1" == "stable" ]; then
	updatepath="$1"
elif [ "$1" == "nightly" ] || [ "$1" == "alpha" ] || [ "$1" == "beta" ] || [ "$1" == "rc" ]; then
	updatepath="unstable/$1"
else
	echo "Second command-line parameter has to be stable, nightly, alpha, beta or rc"
	exit 1
fi
shift

if [ -f "./build_communitys" ]; then
	echo "loading communitys from file"
	profiles="$(cat ./build_communitys)"
fi

if [ -f "./build_branches" ]; then
	echo "loading branches from file"
	branches="$(cat ./build_branches)"
fi

if [ -f "./build_noupload" ]; then
	echo "not uploading build"
	noupload=1
else
	noupload=0
fi

if [ -f "./build_dryrun" ]; then
	echo "not actually building anything."
	dryrun=1
	noupload=1
else
	dryrun=0
fi


. ./gluon


selected_found=0

for GluonRelease in $GLUON_RELEASES; do
	if ! [ "$GluonRelease" == "$sel_gluon_release" ]; then
		continue
	else
		selected_found=1
		break
	fi
done

unset sel_gluon_release

if [ "$selected_found" -ne "1" ]; then
	printf 'ERROR: "$GluonRelease" could not be found in ./gluon file.\n' >&2
	exit 1
fi

./get-gluon $GluonRelease

if [ ! -d "$GluonRelease" ]; then
	printf 'ERROR: Gluon-Folder could not be located.\n' >&2
	exit 1
fi

./copy-patches $GluonRelease
./apply-patchsets $GluonRelease

cd $DIR

echo "generating default site..."
./gen-site $GluonRelease vfnnrw/leverkusen 2>&1 >/dev/null

echo "fetching profiles..."
if [ -z "$profiles" ]; then
	profiles="$(ls -1 site-modules/vfnnrw/$GluonRelease | grep -vw 'all' )"
fi

if [ -z "$branches" ]; then
	branches="ar71xx-generic mpc85xx-generic x86-generic ipq806x ar71xx-tiny x86-64"
fi

cd ./$GluonRelease

version="$(echo $(cat ./site/site.mk | grep "^DEFAULT_GLUON_RELEASE" | cut -d = -f 2 |  awk '{gsub(/^ +| +$/,"")} {print $0 }'))"

echo "running make update..."
( make update ) 2>&1 >/dev/null

echo "building version $version..."

for profile in $profiles; do
	echo "  creating images for $profile"
	echo "    cleaning images-folder..."
	( rm -fR ./output/images/* || true ) 2>&1 >/dev/null
	echo "      generating site..."
	( cd ..; ./gen-site $GluonRelease vfnnrw/$profile ) 2>&1 >/dev/null
		for branch in $branches; do
		if [ "$dryrun" -eq 1 ]; then
			echo "        NOT building architecture $branch"
			continue
		fi
		echo "        building architecture $branch"
		echo "          building..."

		( make -j35 GLUON_BRANCH=stable GLUON_LANGS="en de" GLUON_TARGET=$branch; exit $? ) 2>&1 >/dev/null
		if [ "$?" -ne 0 ]; then #FIXME: does not work :(
			echo "      ERROR: BUILD FAILED, REBUILDING WITH DEBUGGING ENABLED, Logging to it error.log"
			( make V=s GLUON_BRANCH=stable GLUON_LANGS="en de" GLUON_TARGET=$branch; exit $? ) 2>&1 >error.log
			if [ "$?" -ne 0 ]; then
				echo "      DEBUG BUILD FINISHED STILL UNSUCCESSFUL!"
				exit 1
			else
				echo "      DEBUG BUILD FINISHED SUCCESSFULLY, continuing normal build..."
			fi
		fi
	done

	if [ "$dryrun" -eq 0 ]; then
		echo "  generating manifest..."

		( make manifest GLUON_BRANCH=stable; exit $? ) 2>&1 >/dev/null
	fi
	if [ "$noupload" -eq 0 ]; then
		echo "  uploading images..."

		( ssh odin.vfn-nrw.de -p4337 "mkdir -p /srv/http/gluon/$profile/$updatepath/$version/" ) 2>&1 >/dev/null && ( scp -rP4337 output/images/* odin.vfn-nrw.de:/srv/http/gluon/$profile/$updatepath/$version/ 2>&1 >/dev/null )
		echo "    images for $profile has been uploaded."
	else
		if [ "$dryrun" -eq 1 ]; then
			echo "dryrun completed."
		else
			echo "build completed."
		fi
	fi
done

cd $DIR
